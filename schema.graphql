### This file was generated by Nexus Schema
### Do not make changes to this file directly


type AuthPayload {
  token: String!
  user: User!
}

input CardOrderByInput {
  answer: Sort
  createdAt: Sort
  details: Sort
  id: Sort
  question: Sort
}

type Flashcard {
  answer: String!
  cardOwner: User
  details: String!
  id: Int!
  image: String
  isDone: Boolean
  question: String!
}

type Mutation {
  deleteFlashcard(id: Int!): Flashcard!
  login(email: String!, password: String!): AuthPayload!
  post(answer: String!, details: String!, image: String, question: String!): Flashcard!
  signup(email: String!, name: String!, password: String!): AuthPayload!
  updateFlashcard(answer: String, details: String, id: Int!, image: String, isDone: Boolean, question: String): Flashcard!
}

type Query {
  allFlashcards(filter: String, orderBy: [CardOrderByInput!], skip: Int, take: Int): [Flashcard!]!
}

enum Sort {
  asc
  desc
}

type User {
  email: String!
  flashcards: [Flashcard!]!
  id: Int!
  name: String!
}
